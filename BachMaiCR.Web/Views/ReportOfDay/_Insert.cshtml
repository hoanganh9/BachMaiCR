@using Resources
@using BachMaiCR.Utilities.Enums
@using BachMaiCR.DBMapping.ModelsExt
@model BachMaiCR.Web.Models.ReportOfDay

@{
    var strTitleForm = Model.Id.Equals(0) ? Localization.FormAddTitle : Localization.FormEditTitle;
    var lstDoctor = ViewBag.ListDoctors as List<SelectListItem>;
}
<!-- Valid data enable -->
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery.form.js"></script>
<script src="~/Scripts/chosen.jquery.js"></script>
<link href="~/Content/chosen.css" rel="stylesheet" />
<!-- Modal -->
<div class="modal fade bs-example-modal-lg" id="addCategoryModel" tabindex="-1000" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        @Html.ValidationSummary(false)
        @using (Html.BeginForm(
        actionName: "SubmitChange", controllerName: "ReportOfDay", routeValues: new { }, method: FormMethod.Post,
        htmlAttributes: new { @id = "frmModifyCategory", @class = "", @role = "form", @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">@strTitleForm</h4>
                </div>

                <div class="modal-body padding-all padding-bottom-0">
                    <div class="row form-group input-group-sm">
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.DateCreate)
                        </div>
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.UserCreateName)
                        </div>
                        <div class="col-md-12">
                            @Html.HiddenFor(m => m.Status)
                            @Html.HiddenFor(m => m.Id)
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.DateCreate, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.DateCreate, "{0:dd/MM/yyyy}", new { @readonly = "true", @class = "form-control input-sm", @id = "DateCreate", @placeholder = @Localization.LabelDateCreate })

                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.UserCreateName, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.UserCreateName, new { @class = "form-control input-sm only-number _focus", @readonly = "true", @placeholder = @Localization.LabelUserCreate })
                        </div>


                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control input-sm", @placeholder = @Localization.LabelReportName })
                        </div>                        
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(m => m.UserRecipientId, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-10">
                            @Html.HiddenFor(m => m.UserRecipientId)
                            @if (lstDoctor.Any())
                            {<select name="UserRecipientName" multiple id="UserRecipientName" class="chosen-select"
                                     data-placeholder="@Localization.LabelRecipient">
                                @foreach (var item in lstDoctor)
                                {
                                    if (!string.IsNullOrEmpty(Model.UserRecipientId) && Model.UserRecipientId.Contains("," + item.Value + ","))
                                    {
                                        <option value="@item.Value" selected>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                            </select>
                            }
                        </div>                     
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(m => m.UserRecipientId)
                        </div>
                        <div class="col-md-12"></div>

                        <div class="col-md-2">
                            @Html.LabelFor(m => m.StaffDirect, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.StaffDirect, new { @class = "form-control input-sm only-number _focus", @placeholder = @Localization.LabelStaffDirect })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.StaffLeave, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.StaffLeave, new { @class = "form-control input-sm only-number", @placeholder = @Localization.LabelStaffLeave })
                        </div>
                        <div class="col-md-12"></div>                      
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.StaffDirect)
                        </div>                       
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.StaffLeave)
                        </div>


                        <div class="col-md-12"></div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.StaffVacation, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.StaffVacation, new { @class = "form-control input-sm only-number", @placeholder = @Localization.LabelStaffVacation })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.StaffSick, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.StaffSick, new { @class = "form-control input-sm only-number", @placeholder = @Localization.LabelStaffSick })
                        </div>                     
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.StaffVacation)
                        </div>                        
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.StaffSick)
                        </div>
                        <div class="col-md-12"></div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.StaffMaternity, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.StaffMaternity, new { @class = "form-control input-sm only-number", @placeholder = @Localization.LabelStaffMaternity })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.StaffUnpaid, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.StaffUnpaid, new { @class = "form-control input-sm only-number", @placeholder = @Localization.LabelStaffUnpaid })
                        </div>                       
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.StaffMaternity)
                        </div>
                      
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.StaffUnpaid)
                        </div>


                        <div class="col-md-12"></div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.StaffBusTrip, htmlAttributes: new { @class = "input-lable-control nowrap" })
                            <span class="color-error">&nbsp;*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.StaffBusTrip, new { @class = "form-control input-sm only-number", @placeholder = @Localization.LabelStaffBusinessTrip })
                        </div>                       
                        <div class="col-md-6"></div>
                        <div class="col-md-12"></div>                       
                        <div class="col-md-6">
                            @Html.ValidationMessageFor(m => m.StaffBusTrip)
                        </div>
                    </div>

                </div>
                <div class="clear"></div>
                <div class="modal-footer btn-group-sm padding-all margin-top-0">
                    <button type="submit" formnovalidate  formnovalidate id="btnSave" class="btn btn-primary btn-group-sm min-width "><span class="glyphicon glyphicon-floppy-disk"></span>@Localization.ButtonSaveDisplay</button>
                    <button id="btnSaveAndSent" type="button" class="btn btn-primary btn-group-sm min-width "><span class="glyphicon glyphicon-check"></span>@Localization.ButtonSaveSent</button>
                    <button type="button" class="btn btn-primary btn-group-sm min-width " data-dismiss="modal"><span class="glyphicon glyphicon-off"></span>@Localization.ButtonCloseDisplay</button>
                </div>
            </div>
        }
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        // Select Mutil
        $(".chosen-select").chosen({
            no_results_text: "@Localization.MsgItemNotFound",
            width: "100%",
            search_contains: true,
        });

        // Kiểm tra Valid ở Client.
        $('.chosen-select').on('change', function (evt, params) {
            setUserRecipient();
            $('#UserRecipientId').valid();
        });

        // Chỉ cho phép nhập số
        $(".only-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });


        $('.only-number').focus(function () {
            $(this).select();
        });

        var $catForm = $("#frmModifyCategory");
        $catForm.keyup(function (e) {
            if (e.keyCode == 13)
                $('#btnSave').click();
        });
        // Focus vào trường input đầu tiên
        setTimeout(function () { $catForm.find('._focus').focus(); }, 500);

        function setUserRecipient() {
            var lstItem = $('#UserRecipientName').val();
            if (lstItem != null && lstItem.length > 0) {
                lstItem = "," + $('#UserRecipientName').val().join(',') + ",";
                $('#UserRecipientId').val(lstItem);
                return true;
            }
            else {
                $('#UserRecipientId').val("");
                return false;
            }
        }
        //Submit form
        $catForm.submit(function (event) {
            event.preventDefault();
            setUserRecipient();
            if (!$('#UserRecipientId').valid())
                return;
            else
                if ($catForm.valid()) {
                    $.ajax({
                        type: "POST",
                        url: $catForm.attr('action'),
                        data: $catForm.serialize(),
                        dataType: '',//chú ý là form đặc biệt thì phải điền trường này
                        success: function (response) {
                            if (response != null && response.status == 200) {
                                $('#addCategoryModel').modal('hide');
                                var $catlist = $('#cat_list_render');
                                if ($catlist == null || $catlist.length == 0) {
                                    window.notice('@Resources.Localization.MsgItemNotFound', window.notice_warning);
                                }
                                else {                                  
                                    OnCriteria(0);
                                }
                                window.notice(response.result, window.notice_success);
                            } else {
                                window.notice(response.result, window.notice_error);
                            }
                        }
                    });
                }
                else {
                    window.notice("Điền đầy đủ thông tin trên form", window.notice_warning);
                }
        });

        $('#btnSaveAndSent').click(function () {
            $('#Status').val(1);
            $('#btnSave').click();
        });

        // Set index cho datepicker lên trên
        $('.datepicker').css('z-index', 9999);
    });
</script>
