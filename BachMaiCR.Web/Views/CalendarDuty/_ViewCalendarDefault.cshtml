@using BachMaiCR.DBMapping.Models;
@using BachMaiCR.DBMapping.ModelsExt;
@using BachMaiCR.DataAccess;
@using Resources;
@using System.Data;
@using BachMaiCR.Web.Utils;
@using BachMaiCR.Utilities.Enums;
@{


    string titlePopup = Localization.DoctorDetail;
    ViewBag.Title = Resources.Localization.TitleViewCalendar;
    var objCalendarDuty = ViewBag.objCalendarDuty as CALENDAR_DUTY;
    var listDoctor = ViewBag.doctors as List<DoctorCalendarLeader>;
    int idCalendarDuty = 0;
    if (objCalendarDuty != null)
    {
        idCalendarDuty = objCalendarDuty.CALENDAR_DUTY_ID;
    }
    var times = ViewBag.times;
    DateTime date = Utils.GetDateTime();
    date = Convert.ToDateTime(times);
    DataTable tbl = Utils.Fill(date);
    string[] thu = { "Thứ 2", "Thứ 3", "Thứ 4", "Thứ 5", "Thứ 6", "Thứ 7", "Chủ nhật" };
    var columnx = "";
    string lengh = "";
    string doctorName = "";
    string doctorId = "", calendarDoctorId = "";
    //Check xem dữ liệu xóa hay đổi lịch
    UnitOfWork unit = new UnitOfWork();
    CALENDAR_CHANGE objChangcheck = new CALENDAR_CHANGE();
    List<CALENDAR_CHANGE> objChangDelete = new List<CALENDAR_CHANGE>();
    List<CALENDAR_CHANGE> objChangeChange = new List<CALENDAR_CHANGE>();
    List<CALENDAR_CHANGE> objChangeChange_Old = new List<CALENDAR_CHANGE>();
    List<CALENDAR_CHANGE> listCalendarChangeChild = new List<CALENDAR_CHANGE>();
    List<CALENDAR_CHANGE> listCalendarChange = unit.CalendarChanges.GetListChangeCalendar(Convert.ToInt32(idCalendarDuty));
    var nodeOld = "";
    int addType = CalendarChangeType.Add.GetHashCode();
    int changeType = CalendarChangeType.Change.GetHashCode();
    int deletedType = CalendarChangeType.Deleted.GetHashCode();
    int? calendarStatus = objCalendarDuty.CALENDAR_STATUS;
    var typeEdit = ViewBag.typeEdit;
}
<style>
    .tbl td:first-child {
        text-align: left;
    }

    .tbl {
        table-layout: fixed;
    }

        .tbl td, .tbl td div {
            text-overflow: ellipsis;
            overflow: hidden;
        }

    .schedule-element {
        min-width: 100%;
        max-width: 100%;
    }
</style>


<script type="text/javascript">
    $(function () {
        setWidthTd();
        var $page_nav_content = $('#page-nav-content');
        $page_nav_content.css('overflow-x', "scroll");
    });

    function setWidthTd() {
        var widthTable = $('#selectable').width();
        var colWidth = parseFloat(widthTable) / 7;
        $('#selectable tr td').each(function () {
            $(this).width(parseFloat(colWidth).toFixed());
        });
    }

</script>
<div class="content page-content" style="width: 98%;">
@if (typeEdit == 1 && typeEdit!=null)
{ 
    <div id="nav">
        <table style="width: 100%; border: 0px">
            <tr>
                <td style=" width: 65%">
                    <div style="margin-top:-3px;">   <a href="/CalendarDuty" title="">@Resources.Localization.ManageCalendarDutyTitle.ToUpper()</a> »  @ViewBag.Title.ToUpper()
                    </div>
</td>
                <td>
                    <table border="0" style="width:100%;margin-top:10px; border-spacing:0px 0px;border-collapse: separate;">
                        <tr>
                            <td style="width:100px;background:#b6ff00"></td>
                            <td style="text-align:left;width:100px; color:#302f2f"> <strong> Đổi lịch trực</strong></td>
                            <td style="width:100px;background:#d5f76e;"></td>
                            <td style="text-align:left;width:155px;color:#302f2f"> <strong> Bổ sung lịch trực</strong></td>
                            <td style="text-align:left"></td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>
    <table border="0">
        <tr>

            <td style="width: 100%; text-align: left; vertical-align: top">
                <strong>@Resources.Localization.LabelContent : 	</strong>&nbsp;
                            @HttpUtility.HtmlDecode(objCalendarDuty.CALENDAR_NAME)&nbsp; 
                             &nbsp; <strong>
                                 @Resources.Localization.LabelMonthSearch
                             </strong>&nbsp;  @Html.Raw(HttpUtility.HtmlDecode(objCalendarDuty.CALENDAR_MONTH.ToString()))
                <strong>@Resources.Localization.LabelYear</strong>   &nbsp;  @Html.Raw(HttpUtility.HtmlDecode(objCalendarDuty.CALENDAR_YEAR.ToString()))
            </td>

        </tr>
        <tr>

            <td style="vertical-align: bottom">
@if (objCalendarDuty.USER_CREATE_ID != null)
{
    <b>@Localization.ListUserCreate:&nbsp;</b>  @objCalendarDuty.ADMIN_USER.FULLNAME
}

@if (objCalendarDuty.DATE_CREATE != null)
{
    <b style="margin-left: 20px;">@Localization.ListDateCreate:&nbsp;</b>   @String.Format("{0:d/M/yyyy HH:mm:ss}", @objCalendarDuty.DATE_CREATE)
}

@if (objCalendarDuty.USER_APPROVED_ID != null)
{
    <b style="margin-left: 20px;">@Localization.ListUserApproved:</b> @objCalendarDuty.ADMIN_USER1.FULLNAME
}
@if (objCalendarDuty.DATE_APPROVED != null)
{
    <b style="margin-left: 20px;">@Localization.ListDateApproved:&nbsp;</b>  @String.Format("{0:d/M/yyyy HH:mm:ss}", objCalendarDuty.DATE_APPROVED)
}
@if (objCalendarDuty.CALENDAR_STATUS != null)
{
    <b style="margin-left: 20px;">@Localization.ListStatus: &nbsp; </b>
    if (calendarStatus == 1)
    {
        @Html.Label(Resources.Localization.StatusCreateNew, new { @class = "labels" })
    }
    if (calendarStatus == 2)
    {
        @Html.Label(Resources.Localization.StatusPendingApproval, new { @class = "labels" })
    }
    if (calendarStatus == 3)
    {
        @Html.Label(Resources.Localization.StatusIsApproval, new { @class = "labels" })
    }
    if (calendarStatus == 4)
    {
        @Html.Label(Resources.Localization.StatusCancelApproval, new { @class = "labels" })
        <span><strong style="margin-left: 20px;">Nội dung hủy duyệt </strong> :&nbsp;  @objCalendarDuty.COMMENTS</span>
    }
}
            </td>
        </tr>
    </table>
}
    <div id="grid">
        <table class="tbl" id="selectable">
            <tr>


                @for (int i = 0; i < 7; i++)
                {
                    <th>@thu[i] </th>
                }

            </tr>
            @for (int j = 0; j < tbl.Rows.Count; j++)
            {
                DataRow dr = tbl.Rows[j];
                <tr>

                    @for (int k = 0; k < 7; k++)
                    {
                        columnx = dr[k].ToString();
                        var id = columnx;
                        var countRow = 0;
                        var columnId = "";
                        if (k == 5 || k == 6)
                        {
                            if (String.IsNullOrEmpty(columnx))
                            {
                        <td class="item-scheduleOld" id="@id">
                            <div style="vertical-align: top; float: right;">@columnx</div>
                        </td>
                            }
                            else
                            {
                                var css = "item-schedule";
                                if (Convert.ToInt32(columnx) == DateTime.Now.Day && DateTime.Now.Month == date.Month && DateTime.Now.Year == date.Year)
                                {
                                    css += " item-current";
                                }
                                DateTime dateX = Utils.ToDateTime(columnx + "/" + date.Month + "/" + date.Year, "dd/MM/yyyy");
                                columnId = String.Format("{0:dd/MM/yyyy}", dateX);
                        <td class="@css" id="@id" style="vertical-align:top;">
                            <span class="itemspan_@columnx" id="@columnId">@columnx</span>
                            <br />
                            @for (int tt = 0; tt < listDoctor.Count; tt++)
                            {
                                var divId = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listDoctor[tt].DOCTORS_ID.ToString();
                                if (Convert.ToInt32(columnx) == Convert.ToDateTime(listDoctor[tt].DATE_START).Day)
                                {
                                    countRow++;
                                    nodeOld = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listDoctor[tt].DOCTORS_ID;
                                    objChangcheck = new CALENDAR_CHANGE();
                                    objChangcheck.CALENDAR_DUTY_ID = Convert.ToInt32(idCalendarDuty);
                                    objChangcheck.DATE_START = dateX;
                                    objChangcheck.DOCTORS_ID = listDoctor[tt].DOCTORS_ID;
                                    objChangDelete = unit.CalendarChanges.ListNewChange(objChangcheck, deletedType, 1);
                                    objChangeChange = unit.CalendarChanges.ListNewChange(objChangcheck, changeType, 1);
                                    doctorName = listDoctor[tt].ABBREVIATION;
                                    doctorId = Convert.ToString(listDoctor[tt].DOCTORS_ID);
                                    if (!string.IsNullOrEmpty(doctorName))
                                    {
                                        lengh = Convert.ToString(doctorName.Length + 10) + "px";
                                    }
                                    else
                                    {
                                        lengh = "100%";
                                    }
                                    objChangeChange_Old = unit.CalendarChanges.ListNewChange(objChangcheck, changeType, 2);

                                    calendarDoctorId = id + "_" + doctorId;
                                    if ((objChangDelete.Count > 0) || (objChangeChange.Count > 0))
                                    {
                                        if (objChangDelete.Count > 0)
                                        {
                                <div class="schedule-element" data-row="@countRow.ToString()" title="Hủy trực" style="background: #D0DAFD; text-decoration: line-through; color: #ff0000; padding-left: 1px; height: 40px;" id="@divId">
                                    <a href="#" id="@listDoctor[tt].DOCTORS_ID" style="color:red;">@listDoctor[tt].ABBREVIATION.ToString()</a>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                                        }
                                        if (objChangeChange.Count > 0)
                                        {
                                <div class="schedule-element change-calendar" data-row="@countRow.ToString()" title="Đổi lịch trực"  id="@divId">
                                    <a href="#" id="@listDoctor[tt].DOCTORS_ID.ToString()">@listDoctor[tt].ABBREVIATION.ToString()</a>
                                    <img src="~/Images/Forward_Arrow.png" style="width: 12px; height: 12px;" />
                                    <a href="#" id="@objChangeChange[0].DOCTORS_CHANGE_ID">@objChangeChange[0].DOCTORS_CHANGE_NAME</a>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>

                                        }

                                    }
                                    else if (objChangeChange_Old.Count > 0)
                                    {<div class="schedule-element change-calendar" data-row="@countRow.ToString()" title="Đổi lịch trực"  id="@divId">
                                        <a href="#" id="@listDoctor[tt].DOCTORS_ID.ToString()">@listDoctor[tt].ABBREVIATION.ToString()</a>
                                        <img src="~/Images/Forward_Arrow.png" style="width: 12px; height: 12px;" />
                                        <a href="#" id="@objChangeChange_Old[0].DOCTORS_ID">@objChangeChange_Old[0].DOCTORS_NAME</a>

                                    </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>

                                    }
                                    else
                                    {
                                        if (objCalendarDuty.ISAPPROVED == 1)
                                        {
                                <div class="schedule-element current-calendar" data-row="@countRow.ToString()"  id="@divId">

                                    <a href="#" id="@listDoctor[tt].DOCTORS_ID">@listDoctor[tt].ABBREVIATION</a>

                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                                        }
                                        else
                                        {
                                <div class="schedule-element current-calendar" data-row="@countRow.ToString()"  id="@divId">
                                    <span class="viewInfor" data-row="@countRow.ToString()" id="@listDoctor[tt].DOCTORS_ID.ToString()"><a href="#" id="@listDoctor[tt].DOCTORS_ID">@listDoctor[tt].ABBREVIATION</a>   </span>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                                        }
                                    }
                                    objChangcheck = null;
                                    objChangDelete = null;
                                    objChangeChange = null;
                                }
                            }
                            @{ listCalendarChangeChild = listCalendarChange.Where(o => o.DATE_START != null && o.DATE_START.Value.Day == Convert.ToInt32(columnx) && o.STATUS == 3).ToList();
                            }

                            @for (int x = 0; x < listCalendarChangeChild.Count; x++)
                            {
                                countRow++;
                                nodeOld = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listCalendarChangeChild[x].DOCTORS_ID;
                                var divId = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listCalendarChangeChild[x].DOCTORS_ID;
                                <div class="schedule-element add-calendar" title="Bổ sung lịch trực" data-row="@countRow.ToString()" id="@divId">
                                    <a href="#" id="@listCalendarChangeChild[x].DOCTORS_ID">@listCalendarChangeChild[x].DOCTORS_NAME </a>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                            }


                        </td>
                            }
                        }
                        else
                        {
                            if (String.IsNullOrEmpty(columnx))
                            {
                        <td class="item-scheduleOld" id="@id" style="vertical-align:top;">
                            <div style="vertical-align: top; float: right;">@columnx</div>
                        </td>
                            }
                            else
                            {
                                var css = "item-schedule";
                                if (Convert.ToInt32(columnx) == DateTime.Now.Day && DateTime.Now.Month == date.Month && DateTime.Now.Year == date.Year)
                                {
                                    css += " item-current";
                                }
                                DateTime dateX = Utils.ToDateTime(columnx + "/" + date.Month + "/" + date.Year, "dd/MM/yyyy");
                                columnId = String.Format("{0:dd/MM/yyyy}", dateX);
                        <td class="@css" id="@id" style="vertical-align:top;">
                            <span class="itemspan_@columnx" id="@columnId">@columnx</span>
                            <br />
                            @for (int tt = 0; tt < listDoctor.Count; tt++)
                            {
                                var divId = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listDoctor[tt].DOCTORS_ID.ToString();
                                if (Convert.ToInt32(columnx) == Convert.ToDateTime(listDoctor[tt].DATE_START).Day)
                                {
                                    countRow++;
                                    nodeOld = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listDoctor[tt].DOCTORS_ID;
                                    objChangcheck = new CALENDAR_CHANGE();
                                    objChangcheck.CALENDAR_DUTY_ID = Convert.ToInt32(idCalendarDuty);
                                    objChangcheck.DATE_START = dateX;
                                    objChangcheck.DOCTORS_ID = listDoctor[tt].DOCTORS_ID;
                                    objChangDelete = unit.CalendarChanges.ListNewChange(objChangcheck, deletedType, 1);
                                    objChangeChange = unit.CalendarChanges.ListNewChange(objChangcheck, changeType, 1);
                                    doctorName = listDoctor[tt].ABBREVIATION;
                                    doctorId = Convert.ToString(listDoctor[tt].DOCTORS_ID);
                                    if (!string.IsNullOrEmpty(doctorName))
                                    {
                                        lengh = Convert.ToString(doctorName.Length + 10) + "px";
                                    }
                                    else
                                    {
                                        lengh = "100%";
                                    }
                                    objChangeChange_Old = unit.CalendarChanges.ListNewChange(objChangcheck, changeType, 2);

                                    calendarDoctorId = id + "_" + doctorId;
                                    if ((objChangDelete.Count > 0) || (objChangeChange.Count > 0))
                                    {
                                        if (objChangDelete.Count > 0)
                                        {
                                <div class="schedule-element" data-row="@countRow.ToString()" title="Hủy trực" style="background: #D0DAFD; text-decoration: line-through; color: #ff0000; padding-left: 1px; height: 40px;" id="@divId">
                                    <a href="#" id="@listDoctor[tt].DOCTORS_ID" style="color:red;">@listDoctor[tt].ABBREVIATION.ToString()</a>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                                        }
                                        if (objChangeChange.Count > 0)
                                        {
                                <div class="schedule-element change-calendar" data-row="@countRow.ToString()" title="Đổi lịch trực"  id="@divId">
                                    <a href="#" id="@listDoctor[tt].DOCTORS_ID.ToString()">@listDoctor[tt].ABBREVIATION.ToString()</a>
                                    <img src="~/Images/Forward_Arrow.png" style="width: 12px; height: 12px;" />
                                    <a href="#" id="@objChangeChange[0].DOCTORS_CHANGE_ID">@objChangeChange[0].DOCTORS_CHANGE_NAME</a>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>

                                        }

                                    }
                                    else if (objChangeChange_Old.Count > 0)
                                    {<div class="schedule-element change-calendar" data-row="@countRow.ToString()" title="Đổi lịch trực"  id="@divId">
                                        <a href="#" id="@listDoctor[tt].DOCTORS_ID.ToString()">@listDoctor[tt].ABBREVIATION.ToString()</a>
                                        <img src="~/Images/Forward_Arrow.png" style="width: 12px; height: 12px;" />
                                        <a href="#" id="@objChangeChange_Old[0].DOCTORS_ID">@objChangeChange_Old[0].DOCTORS_NAME</a>

                                    </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>

                                    }
                                    else
                                    {
                                        if (objCalendarDuty.ISAPPROVED == 1)
                                        {
                                <div class="schedule-element current-calendar" data-row="@countRow.ToString()"  id="@divId">

                                    <a href="#" id="@listDoctor[tt].DOCTORS_ID">@listDoctor[tt].ABBREVIATION</a>

                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                                        }
                                        else
                                        {
                                <div class="schedule-element current-calendar" data-row="@countRow.ToString()"  id="@divId">
                                    <span class="viewInfor" data-row="@countRow.ToString()" id="@listDoctor[tt].DOCTORS_ID.ToString()"><a href="#" id="@listDoctor[tt].DOCTORS_ID">@listDoctor[tt].ABBREVIATION</a>   </span>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                                        }
                                    }

                                    objChangcheck = null;
                                    objChangDelete = null;
                                    objChangeChange = null;
                                }
                            }
                            @{ listCalendarChangeChild = listCalendarChange.Where(o => o.DATE_START != null && o.DATE_START.Value.Day == Convert.ToInt32(columnx) && o.STATUS == 3).ToList();
                            }

                            @for (int x = 0; x < listCalendarChangeChild.Count; x++)
                            {
                                countRow++;
                                nodeOld = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listCalendarChangeChild[x].DOCTORS_ID;
                                var divId = String.Format("{0:dd/MM/yyyy}", dateX) + "," + listCalendarChangeChild[x].DOCTORS_ID;
                                <div class="schedule-element add-calendar" title="Bổ sung lịch trực" data-row="@countRow.ToString()" id="@divId">
                                    <a href="#" id="@listCalendarChangeChild[x].DOCTORS_ID">@listCalendarChangeChild[x].DOCTORS_NAME </a>
                                </div>
                                <div class="schedule-DB" data-oldx="@nodeOld"></div>
                            }


                        </td>
                            }
                        }

                    }
                </tr>
            }

        </table>

    </div>







</div>
<div class="TextCenter" id="buttonList">
    @Html.Partial("_ListButtonView")
</div>

<div id="box_staff" class="box-staff " style="display: none">
</div>
<div id="popupAnser"></div>
@if (tbl != null)
{
    tbl.Dispose();

}
@{
    unit.Dispose();
    listDoctor = null;
    objChangcheck = null;
    objChangDelete = null;
    objChangeChange = null;
    listCalendarChange = null;
    listCalendarChangeChild = null;
}

<link type="text/css" href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script type="text/ecmascript" src="~/Scripts/Calendar/calendarDefault.js"></script>
<script type="text/javascript">

    function EditCalendar(idCalendarDuty) {

        $.ajax({
            type: "GET",
            url: '/CalendarDuty/ViewCalendarDefault',
            data: { idCalendarDuty: idCalendarDuty, types: 1 },
            success: function (response) {
                $('#Contentx').html(response);
            }

        })

    }

    function SendCalendar() {

        var idCalendarDuty = '@idCalendarDuty';
        $.ajax({
            type: "GET",
            url: '/CalendarDuty/SendApproved',
            data: { idCalendarDuty: idCalendarDuty, types: '1' },
            success: function (response) {
                $('#buttonList').html(response);
                window.notice('Gửi duyệt lịch trực thành công', window.notice_success);

            }

        })

    }
    function CancelCalendar() {
        var idCalendarDuty = '@idCalendarDuty';
        $.get('/CalendarDuty/ApprovedRequest', { idCalendarDuty: idCalendarDuty, types: '7', userCreate: '1' }, function (data) {

            $('#popupAnser').html(data);
            $('#CalendarDutyRequest').modal({
                keyboard: true
            });
        });
    }
    function ApprovedCalendar() {
        var idCalendarDuty = '@idCalendarDuty';
        $.ajax({
            type: "GET",
            url: '/CalendarDuty/ApprovedCalendarDuty',
            data: { idCalendarDuty: idCalendarDuty, types: '2' },
            success: function (response) {
                //$('#buttonList').html(response);
                window.notice('Duyệt lịch trực đơn vị thành công', window.notice_success);
                window.location = "/CalendarDuty";
            }

        })

    }

    function ExportExcel() {
        var url = '@Url.Action("ExportCalendarDefault", "CalendarDuty")' + '?idCalendarDuty=@idCalendarDuty';
        location.href = url;
    }
</script>
