@using Resources
@using BachMaiCR.Utilities.Enums
@model BachMaiCR.Web.Models.DoctorLevel
@{
    //ViewBag.Title = "AddCategory";
    var strTitleForm = Model.Id.Equals(0) ? Localization.FormAddTitle : Localization.FormEditTitle;
    var strName = Localization.LableDoctorLevelName;

}

<!-- Modal -->

<div class="modal fade" id="addEntityModel" tabindex="-1000" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        @Html.ValidationSummary(false)
        @using (Html.BeginForm(
        actionName: "SubmitChange", controllerName: "DoctorLevel", routeValues: new { }, method: FormMethod.Post,
        htmlAttributes: new { @id = "frmModifyModel", @class = "", @role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">@strTitleForm</h4>
                </div>
                <div class="modal-body min-width">
                    <div class="row form-group">
                        <!-- Hide value -->
                        @Html.HiddenFor(m => m.Id)

                        <div class="col-md-12">
                            @Html.ValidationMessageFor(m => m.Code)
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Code, new { @class = "input-lable-control nowrap" })
                            <span class="color-error">*</span>
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Code, new { @class = "form-control index _first input-sm", @placeholder = Localization.LableCodeDisplay })
                        </div>


                        <div class="col-md-12">
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Name, new { @class = "input-lable-control nowrap" })
                            <span class="color-error">*</span>
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control index _first input-sm", @placeholder = strName })
                        </div>

                        <div class="col-md-12">
                            @Html.ValidationMessageFor(m => m.Level)
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Level, new { @class = "input-lable-control nowrap" })
                            <span class="color-error">*</span>
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Level, new { @class = "form-control index input-sm", @placeholder = Localization.LableDoctorLevel })
                        </div>
                    </div>
                </div>

                <div class="modal-footer padding-all">
                    <button type="submit" formnovalidate  class="btn btn-primary min-width"><span class="glyphicon glyphicon-floppy-disk"></span>@Localization.ButtonSaveDisplay</button>
                    <button type="button" class="btn btn-primary min-width" data-dismiss="modal"><span class="glyphicon glyphicon-off"></span>@Localization.ButtonCloseDisplay</button>
                </div>
            </div>
        }
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        var $catForm = $("#frmModifyModel");
        // Focus vào trường input đầu tiên
        setTimeout(function () { $catForm.find('input:text:visible:first').focus(); }, 500);

        $catForm.submit(function (event) {
            event.preventDefault();
            if ($catForm.valid()) {
                $.ajax({
                    type: "POST",
                    url: $catForm.attr('action'),
                    data: $catForm.serialize(),
                    dataType: '',//chú ý là form đặc biệt thì phải điền trường này
                    success: function (response) {
                        if (response != null && response.status == 200) {
                            $('#addEntityModel').modal('hide');
                            var $catlist = $('#cat_list_render');
                            if ($catlist == null || $catlist.length == 0) {
                                window.notice('@Resources.Localization.MsgItemNotFound', window.notice_warning);
                                //alert('@@LTV: để tải lại được danh sách Category, div chứa cần có id là "cat_list_render"');
                            }
                            else {
                                $catlist.html('');
                                $catlist.load('/DoctorLevel/DoctorLevelList?type=1');
                            }
                            window.notice(response.result, window.notice_success);
                        } else {
                            window.notice(response.result, window.notice_error);
                        }
                    }
                });
            }
            else {
                window.notice("Điền đầy đủ thông tin trên form", window.notice_warning);
            }
        });
    });

    // Chỉ cho phép nhập số
    $("#Level").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
</script>