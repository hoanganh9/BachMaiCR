@using BachMaiCR.DBMapping.Models
@using BachMaiCR.DataAccess
@using BachMaiCR.Web.Models
@using Resources
@{
                    // Dựng cây menu từ các action người dùng được phân quyền
                    // Sử dụng cache để lưu cây
                    // Nên nếu muốn loại bỏ cache thì khi quyền người nào đó thì phải xóa cache này đi
                    // cache-key  = "menu" + userid;
    ViewBag.Title = Localization.ManageRolesTitle;
}
<div class="content">
    <div id="nav"><a href="/admin/ManageRoles" title="">@Resources.Localization.ManagerAdminTitle.ToUpper()</a> »  @ViewBag.Title.ToUpper() 
        @if (ViewBag.RoleName != null)
        {
            <i><strong style="color: red;">(@ViewBag.RoleName)</strong></i>
        }
    </div>
   
    <table style="width: 100%">
        <tr>
            <td>
                <div>
                    <button type="button" style="margin-bottom: 10px;" class="btn btn-primary btn-sm" value="@Localization.Back"  onclick="location.href='@Url.Action("manageroles", "admin")'" ><span class="glyphicon glyphicon-step-backward"></span>@Localization.Back</button>
                    
                </div>
            </td>
        </tr>
        <tr>
            <td style="background-color: #dbe8fe; height: 25px; font-weight: bold; padding-bottom: 4px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #008dc2; padding: 5px; color: #0b55c4;">Danh sách chức năng</td>
        </tr>
        <tr>
            <td>
                <div >
                    <ul class="main-menu" id="t">
                        @{
                            var list = ViewBag.UserMenuModel as List<UserMenuModel>;
                            if (list != null && list.Any())
                            {
                                var groupedMenu = list.GroupBy(o => o.GroupCode).Select(o => o.Key).ToList();
                                if (groupedMenu.Any())
                                {
                                    foreach (string s in groupedMenu)
                                    {
                                        var menu = list.Where(o => o.GroupCode == s).ToList();
                                        @Html.Raw(@"<li class='main-title'>")
                                        @Html.Raw(string.Join(@"", new string[]
                                                                       {
                                                                           "<input class='cbx-parent-item' ",
                                                                           menu.Select(o=>o.Selected).Contains(false) ? @" " : @"checked='checked' ",
                                                                           " role-id = '",
                                                                           @ViewBag.RoleId.ToString(), "' ",
                                                                           "style='float:left; margin-left:3px; margin-top:7px;' data-id='0'",
                                                                           "type='checkbox'/>"
                                                                       }));
                                        UserMenuModel random = list.FirstOrDefault(o => o.GroupCode == s);
                                        @Html.Raw(@"<span><b>");
                                        @(random == null || string.IsNullOrWhiteSpace(random.GroupName) ? "Chưa phân nhóm" : random.GroupName)
                                        @Html.Raw(@"</b></span>");

                                        if (menu.Any())
                                        {
                                            @Html.Raw(@"<ul class='sub-menu'>")
                                            foreach (UserMenuModel m in menu)
                                            {
                                                <text>
                                                    <li class="sub-title">
                                                        @Html.Raw(string.Join(@"", new string[]
                                                                                       {
                                                                                           "<input class='cbx-item' ",
                                                                                           m.Selected == true ? @"checked='checked' " : " ",
                                                                                           " role-id = '",
                                                                                           @ViewBag.RoleId.ToString(), "' ",
                                                                                           " style='float:left; margin-left:30px; margin-right:3px; margin-top:7px;' data-id='" + m.Id + "' ",
                                                                                           "type='checkbox'/>"
                                                                                       }))
                                                        <span>
                                                            @{
                                                                if (m.IsMenu && m.ActionName != null && m.Controller != null)
                                                                {
                                                                    @Html.ActionLink(m.Description, m.ActionName.ToLower(), m.Controller.ToLower().Replace("controller", ""))
                                                                }
                                                                else
                                                                {
                                                                    @m.Description
                                                                }
                                                            }
                                                        </span>
                                                    </li>
                                                </text>
                                            }
                                            @Html.Raw(@"</ul>")
                                        }
                                        @Html.Raw(@"</li>")
                                    }
                                }
                            }
                        }
                    </ul>
                </div>
            </td>
        </tr>
    </table>
</div>
<style type="text/css">
    .main-menu
    {
        list-style: none;
        float: left;
        padding: 0px;
    }

    .main-title
    {
        list-style: none;
        min-height: 30px;
        clear: both;
        float: left;
    }

        .main-title span
        {
            min-height: 30px;
            float: left;
            display: inline;
            /*border-bottom: solid 1px gray;*/
            margin-left: 5px;
            padding-top: 4px;
        }

    .sub-menu
    {
        list-style: none;
        float: left;
        clear: both;
        padding: 0px;
    }

    .sub-title
    {
        list-style: none;
        min-height: 30px;
        clear: both;
        float: left;
    }

        .sub-title span
        {
            min-height: 30px;
            float: left;
            display: inline;
            /*border-bottom: solid 1px gray;*/
            /*margin-left: 30px;*/
        }

            .sub-title span a
            {
                color: red;
            }

    a.tree-point:hover
    {
        width: 12px !important;
        height: 12px !important;
        margin-left: -1px;
    }
</style>
<script type="text/javascript" src="~/Scripts/Utils/bmcrUtils.js"></script>
<script type="text/javascript">
    var nodePoint = [
        "<div style='float:left; height:30px;'>",
            "<a class='tree-point' style='float:left; margin-top:10px; width:9px; height:9px; border-radius:50%; background-color:gray; cursor:pointer;'>",
            "</a>",
            "<div class='clear'></div>",
            "<div style='float:left; border-left:solid 1px gray;height:13px; margin-left:4px;'>",
            "</div>",
        "</div>"
    ].join('');

    var midPoint = [
        "<div style='float:left; border-left:solid 1px gray;height:30px; margin-left:4px;'>",
        "</div>"
    ].join('');

    var endPoint = [
        "<div style='float:left; border-left:solid 1px gray;height:15px; margin-left:4px;'>",
        "</div>",
    ].join('');

    $(document).ready(function (parameters) {
        //console.log(parameters);
        var $main_title = $('.main-title');
        _.each($main_title, function (item) {
            var hasUl = $(item).find('ul').length > 0;
            if (hasUl) {
                $(item).html(nodePoint + $(item).html());
            }
            var $li = $(item).find('li');
            var totalLi = $li.length;
            _.each($li, function (li, index) {
                if (index < totalLi - 1) {
                    $(li).html(midPoint + $(li).html());
                } else {
                    $(li).html(endPoint + $(li).html());
                }
            });
        });

        $('.tree-point').bind('click', function (event) {
            var collapse = $(this).attr('collapse') == "true";
            if (collapse) {
                var $ul = $(this).parent().parent().find('ul');
                $ul.fadeIn("fast");
                $(this).parent().find('div').last().show();
                $(this).attr('collapse', false);
            } else {
                var $ul = $(this).parent().parent().find('ul');
                $ul.fadeOut("fast");
                $(this).parent().find('div').last().hide();
                $(this).attr('collapse', true);
            }
        });

        $('.cbx-item').bind('click', function (event) {
            var $cbx_items = $('.cbx-item');
            var actions = [];
            _.each($cbx_items, function (item) {
                if ($(item).is(":checked")) {
                    actions.push($(item).attr('data-id'));
                }
            });

            var cbxParent = $(this).parents('li.main-title').children('input.cbx-parent-item');
            var cbxLength = $(this).parent().parent().find('input.cbx-item').length;
            var cbxCheckedLength = $(this).parent().parent().find('input.cbx-item:checked').length;

            if (cbxCheckedLength == cbxLength && cbxCheckedLength > 0) {
                cbxParent.attr('checked', true);
            } else {
                cbxParent.attr('checked', '');
                cbxParent.removeAttr('checked');
            }
            var role_id = $(this).attr('role-id');
           //console.log(role_id);
           //console.log(actions);
            $.post('/WebpageRoles/UpdateRoleWithActions', $.param({ roleId: role_id, actions: actions }, true), function (response2) {
                if (response2.status == 200) {
                    window.notice(response2.result, window.notice_success);
                }
                else {
                    window.notice(response2.result, window.notice_error);
                }
            });
        });

        $('.cbx-parent-item').bind('click', function (event) {
            var $li = $(this).parent();
            var $cbx = $li.find('input[type=checkbox]');
            var checked = $(this).is(":checked");
            _.each($cbx, function (item) {
                if (checked) {
                    $(item).attr('checked', "");
                } else {
                    $(item).removeAttr('checked');
                }
            });

            var $cbx_items = $('.cbx-item');
            var actions = [];
            _.each($cbx_items, function (item) {
                if ($(item).is(":checked")) {
                    actions.push($(item).attr('data-id'));
                }
            });
            var role_id = $(this).attr('role-id');
           //console.log(role_id);
           //console.log(actions);
            $.post('/WebpageRoles/UpdateRoleWithActions', $.param({ roleId: role_id, actions: actions }, true), function (response2) {
                if (response2.status == 200) {
                    window.notice(response2.result, window.notice_success);
                }
                else {
                    window.notice(response2.result, window.notice_error);
                }
            });
        });
    });
</script>
